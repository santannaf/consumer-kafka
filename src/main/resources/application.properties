
server.port=${SERVER_PORT:3001}

spring.application.name=demo-consumer-process
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.mapper.AUTO_DETECT_IS_GETTERS=false
spring.mustache.check-template-location=false
spring.output.ansi.enabled=never

reconf.enabled=true
reconf.prefix=

spring.threads.virtual.enabled=true

logging.level.root=INFO
logging.pattern.level=%clr(%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}])
logging.level.org.apache.logging.log4j.*=OFF
logging.level.org.springframework.web=INFO
logging.level.org.springframework.kafka.listener=INFO
logging.level.org.springframework.kafka.listener.LoggingCommitCallback=DEBUG
logging.level.org.apache.kafka=INFO
logging.level.org.apache.kafka.clients.consumer=OFF
logging.level.org.apache.kafka.clients.consumer.internals.AbstractCoordinator=OFF
logging.level.org.apache.kafka.clients.producer=OFF

kafka.listener.bootstrap-servers=localhost:29092
kafka.listener.schema-registry=http://localhost:8081
kafka.listener.events-auto-offset-reset-config=latest
kafka.listener.ack-producer-config=all
kafka.listener.enable-avroreader-config=false
kafka.listener.max-attempts-consumer-record=2
kafka.listener.max-producer-retry=3
kafka.listener.max-poll-records=1000
kafka.listener.max-poll-interval-ms=300000
kafka.listener.fetch-min-bytes=200000
kafka.listener.fetch-max-wait-ms=400
kafka.listener.enable-auto-commit=false
kafka.listener.ack-consumer-mode=manual
kafka.listener.async-ack=false
kafka.listener.enable-batch-listener=true

kafka.topic.example=topic-example
